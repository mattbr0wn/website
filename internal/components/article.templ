package components

import (
"fmt"
"time"
"github.com/mattbr0wn/website/internal/markdown"
"github.com/mattbr0wn/website/pkg/reading_time"
)

css DateAndReadTime() {
display: flex;
align-items: center;
margin-bottom: 20px;
}

css PubDate() {
color: blue;
}

css ReadTime() {
font-style: italic;
}

css HeroImg() {
max-width: 80ch;
border-radius: 10px;
margin-bottom: 20px;
margin: 0 auto;
}

templ Article(articleMeta markdown.Frontmatter, body templ.Component, bodyText *string) {
<!DOCTYPE html>
<html lang="en">
@Head()

<body class={ Base() }>
    @Header()
    <div class={ Wrapper() }>
        <h1>{ articleMeta.Title }</h1>
        <p>
            { formatDate(articleMeta.Date) } Â·
            { reading_time.TimeToRead(*bodyText) }
        </p>
        <div class={ BodyText() }>
            @body
        </div>
    </div>
    @Footer()
</body>

</html>
}

func HeroImgPath(articleMeta markdown.Frontmatter) string {
return "../img/" + articleMeta.HeroImg
}

func formatDate(dateString string) string {
months := []string{
"January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December",
}

date, err := time.Parse("2006-01-02", dateString)
if err != nil {
panic(err)
}

day := fmt.Sprintf("%02d", date.Day())
monthName := months[date.Month()-1]
year := fmt.Sprintf("%d", date.Year())

return strings.Join([]string{day, monthName, year}, " ")
}
